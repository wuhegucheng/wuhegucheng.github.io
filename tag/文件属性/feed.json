{
    "version": "https://jsonfeed.org/version/1",
    "title": "今天也请继续加油 • All posts by \"文件属性\" tag",
    "description": "",
    "home_page_url": "http://wuhegucheng.github.io",
    "items": [
        {
            "id": "http://wuhegucheng.github.io/2023/04/01/linux/base/06.%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7/01.%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E5%8F%8A%E7%B1%BB%E5%9E%8B/",
            "url": "http://wuhegucheng.github.io/2023/04/01/linux/base/06.%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7/01.%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E5%8F%8A%E7%B1%BB%E5%9E%8B/",
            "title": "文件属性及类型",
            "date_published": "2023-04-01T08:46:15.000Z",
            "content_html": "<h1 id=\"文件属性及类型\"><a class=\"markdownIt-Anchor\" href=\"#文件属性及类型\">#</a> 文件属性及类型</h1>\n<h2 id=\"文件属性\"><a class=\"markdownIt-Anchor\" href=\"#文件属性\">#</a> 文件属性</h2>\n<p>当我们使用 <code>ls -l</code>  列目录下所有文件时，通常会以长格式的方式显示，其实长格式显示就是我们 <code>windows</code>  下看到的文件详细信息，我们将其称为文件属性，那整个文件的属性分为十列</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll ks.cfg</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- rw-rwx--- <span class=\"token number\">1</span> root root <span class=\"token number\">4434</span> May <span class=\"token number\">30</span> <span class=\"token number\">13</span>:58 ks.cfg</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>-rw-------.\t①:第一个字符是文件类型，其他则是权限</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">1</span>\t\t\t②:硬链接次数</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>root\t\t③:文件属于哪个用户</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>root\t\t④:文件属于哪个组</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">4434</span>\t\t⑤:文件大小</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>May30\t<span class=\"token number\">13</span>:58\t⑥⑦⑧:最新修改的时间与日期</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>ks.cfg\t\t⑨:文件或目录名称</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#以空格为分隔符第二列： </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>文件的权限：Permission denied（权限被拒绝） </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>rw- r-- r-- </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>rwx rwx rwx </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>r：read 读 </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>w：write 写 </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>x：exec 执行 </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>-：该权限位上没有权限</pre></td></tr></table></figure><h2 id=\"文件类型\"><a class=\"markdownIt-Anchor\" href=\"#文件类型\">#</a> 文件类型</h2>\n<p>通常我们使用颜色或者后缀名称来区分文件类型，但很多时候不是很准确，所以我们可以通过 <code>ls -l</code>  以长格式显示一个文件的属性，通过第一列的第一个字符来进一步的判断文件具体的类型</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- rw-r--r-- <span class=\"token number\">1</span> root root <span class=\"token number\">56479</span> Mar <span class=\"token number\">25</span> <span class=\"token number\">10</span>:11 blog.driverzeng.com_access.log </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>d rwxr-xr-x <span class=\"token number\">2</span> root root <span class=\"token number\">6</span> Mar <span class=\"token number\">29</span> 08:39 zls</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-：普通文件 <span class=\"token function\">touch</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>d：directory 目录 <span class=\"token function\">mkdir</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>l：link 软链接文件（windows快捷方式） <span class=\"token function\">ln</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-----------------------------------------------------------</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>c：设备文件（char字符设备文件）和字符相关的设备，举例：打印机，终端 </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>b：设备文件（block块设备文件）和存储相关的设备，举例：硬盘，U盘，磁盘分区 </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>s：socket安全套接字文件，网络编程 </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p：pipe管道文件，父进程与子进程之间的通信文件</pre></td></tr></table></figure><p>但有些情况下，我们无法通过 <code>ls -l</code>  查看文件的类型，比如：一个文件，它可能时普通文件、也可能时压缩文件、或者时命令文件等，那么此时就需要使用 <code>file</code>  来更加精确的判断这个文件的类型</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#语法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">file</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> 文件名</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># file /etc/hosts</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>/etc/hosts: ASCII text</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># file /bin/ls</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>/bin/ls: ELF <span class=\"token number\">64</span>-bit LSB\texecutable,\tx86-64,\tversion\t<span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>SYSV<span class=\"token punctuation\">)</span>, dynamically linked <span class=\"token punctuation\">(</span>uses\tshared libs<span class=\"token punctuation\">)</span>, <span class=\"token keyword\">for</span> GNU/Linux <span class=\"token number\">2.6</span>.32, BuildID<span class=\"token punctuation\">[</span>sha1<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>aa7ff68f13de25936a098016243ce57c3c982e06, stripped</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># file /dev/sda</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>/dev/sda: block\tspecial</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># file /dev/tty1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>/dev/tty1: character special</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># file /etc/grub2.cfg</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>/etc/grub2.cfg:\tbroken\tsymbolic <span class=\"token function\">link</span> to <span class=\"token punctuation\">..</span>/boot/grub2/grub.cfg</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># file /home</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>/home: directory</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>ps:Linux文件扩展名不代表任何含义，仅为了我们能更好的识别该文件时说明类型</pre></td></tr></table></figure><h2 id=\"扩展\"><a class=\"markdownIt-Anchor\" href=\"#扩展\">#</a> 扩展</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>selinux：美国安全局NASH设置的最高安全权限</pre></td></tr></table></figure>",
            "tags": [
                "文件属性",
                "文件类型"
            ]
        },
        {
            "id": "http://wuhegucheng.github.io/2023/04/01/linux/base/05.%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/03.%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86_%E6%96%87%E4%BB%B6%E4%B8%89%E5%89%91%E5%AE%A2_grep/",
            "url": "http://wuhegucheng.github.io/2023/04/01/linux/base/05.%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/03.%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86_%E6%96%87%E4%BB%B6%E4%B8%89%E5%89%91%E5%AE%A2_grep/",
            "title": "文件三剑客",
            "date_published": "2023-04-01T08:46:15.000Z",
            "content_html": "<h1 id=\"文件管理\"><a class=\"markdownIt-Anchor\" href=\"#文件管理\">#</a> 文件管理</h1>\n<h2 id=\"过滤grep\"><a class=\"markdownIt-Anchor\" href=\"#过滤grep\">#</a> 过滤 <code>grep</code></h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-n</td>\n<td style=\"text-align:center\">打印行号 number</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-A</td>\n<td style=\"text-align:center\">after 查看过滤内容的后 N 行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-B</td>\n<td style=\"text-align:center\">before 查看过滤内容的前 N 行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-C</td>\n<td style=\"text-align:center\">center 查看过滤内容的前、后 N 行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-v</td>\n<td style=\"text-align:center\">取反</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-E</td>\n<td style=\"text-align:center\">可以过滤多个结果</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-o</td>\n<td style=\"text-align:center\">只打印出过滤内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-i</td>\n<td style=\"text-align:center\">不区分大小写</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">|</span>：管道符</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>作用：将管道符左边命令的标准输出，交给管道符右边命令的标准输入来处理</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#特殊含义符</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>^：以<span class=\"token punctuation\">..</span>.开头 </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>$：以<span class=\"token punctuation\">..</span>.结尾 </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>*：匹配*前面的内容至少0次或多次 </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>.：匹配任意字符</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat >> zls.txt &lt;&lt; EOF</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>卧槽</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>作者：曾老湿</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>江山风景美如画，</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>本想吟诗赠天下。</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>奈何自己没文化，</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>一句卧槽风好大。</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>就这么地吧。</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>谢谢大家。</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>EOF</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#语法</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token function\">grep</span> <span class=\"token punctuation\">[</span>option<span class=\"token punctuation\">]</span> 参数 条件 文件名</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#示例</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#匹配以 root 开头的行</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep \"^root\" /etc/passwd</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#匹配以 bash 结尾的行</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep \"bash$\" /etc/passwd</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#匹配除了包含 ftp 的内容，其他全部打印</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep -v \"ftp\" /etc/passwd</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">#忽略大小写</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep -i \"ftp\" /etc/passwd</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">#匹配 /var/log/secure 文件中 Failed 字符串，并打印它的下 2 行</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep -n -A 2 \"Failed\" /var/log/secure</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">#匹配 /var/log/secure 文件中 Failed 字符串，并打印它的上 2 行</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep -n -B 2 \"Failed\" /var/log/secure</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">#匹配 /var/log/secure 文件中 Failed 字符串，并打印它的上下 2 行</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep -n -C 2 \"Failed\" /var/log/secure</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">#匹配 /var/log/secure 文件中 Failed 字符串，并打印它的上 5 行下 2 行</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep -A 5 -B 2 'Failed' /var/log/secure</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">#匹配特殊字符</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep \"\\$\" /etc/passwd</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">#匹配字符 0 次或多次</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep \"a*\" /etc/passwd</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">#匹配任意字符</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep \"a.\" /etc/passwd</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\">#只打印出过滤内容</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep -o \"ftp\" /etc/passwd</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\">#过滤区间</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep \"[a-z]\" /etc/passwd</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep \"[A-Z]\" /etc/passwd</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep \"[a-zA-Z]\" /etc/passwd</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>ps：<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>表示区间</pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">#按位与、或、非运算符</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token operator\">|</span>：或</pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token operator\">&amp;</span>：与</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>！：非</pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\">#匹配文件中包含 sync 结尾或 ftp 字符串</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep -Ei \"sync$|ftp\" /etc/passwd</span></pre></td></tr></table></figure><h2 id=\"过滤列-awk\"><a class=\"markdownIt-Anchor\" href=\"#过滤列-awk\">#</a> 过滤列 awk</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 过滤列</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">awk</span> + <span class=\"token punctuation\">[</span>选项<span class=\"token punctuation\">]</span> + <span class=\"token string\">'NR==数字&#123;print $n&#125;'</span> n代表第几列</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-F</span> 指定分割符号 （默认是以空格为分割符）</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">NR</span><span class=\"token operator\">==</span>数字 取行</pre></td></tr></table></figure><h2 id=\"命令查找which\"><a class=\"markdownIt-Anchor\" href=\"#命令查找which\">#</a> 命令查找 <code>which</code></h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#查找命令位置 which </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">which</span> 只能查找命令 </pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#示例</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># which grep </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">grep</span><span class=\"token operator\">=</span><span class=\"token string\">'grep --color=auto'</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>/usr/bin/grep </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># which mkdir </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>/usr/bin/mkdir </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># which cp </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">cp</span><span class=\"token operator\">=</span><span class=\"token string\">'cp -i'</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>/usr/bin/cp </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># which mv </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">mv</span><span class=\"token operator\">=</span><span class=\"token string\">'mv -i'</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>/usr/bin/mv </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># which rm </span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">rm</span><span class=\"token operator\">=</span><span class=\"token string\">'rm -i'</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>/usr/bin/rm</pre></td></tr></table></figure>",
            "tags": [
                "文件属性",
                "grep",
                "awk",
                "which"
            ]
        }
    ]
}